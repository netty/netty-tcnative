FROM centos:7.6.1810

ARG gcc_version=10.2-2020.11
ARG openssl_version=1_1_1d
ARG apr_version=1.6.5
ENV SOURCE_DIR /root/source
ENV WORKSPACE_DIR /root/workspace
ENV PROJECT_DIR /root/workspace/project
ENV GCC_VERSION $gcc_version
ENV OPENSSL_VERSION $openssl_version
ENV APR_VERSION $apr_version

# We want to have git 2.x for the maven scm plugin and also for boringssl
RUN yum install -y http://opensource.wandisco.com/centos/6/git/x86_64/wandisco-git-release-6-1.noarch.rpm

# Install requirements
RUN  set -x && \
  yum -y install epel-release && \
  yum -y install wget tar git make autoconf automake libtool openssl-devel ninja-build gcc-c++

# Install Java
RUN yum install -y java-1.8.0-openjdk-devel golang
ENV JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk/"

# Install aarch64 gcc 10.2 toolchain
RUN set -x && \
  wget https://developer.arm.com/-/media/Files/downloads/gnu-a/$GCC_VERSION/binrel/gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu.tar.xz && \
  tar xvf gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu.tar.xz
ENV PATH="/gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu/bin:${PATH}"

# Install CMake
RUN yum install -y cmake3 && ln -s /usr/bin/cmake3 /usr/bin/cmake

# Cross compile Apache Apr for aarch64 - static
RUN set -x && \
  wget https://downloads.apache.org//apr/apr-$APR_VERSION.tar.gz && \
  tar xvf apr-$APR_VERSION.tar.gz && \
  pushd apr-$APR_VERSION && \
  CC=aarch64-none-linux-gnu-gcc CFLAGS='-O3 -fno-omit-frame-pointer -fPIC' ./configure --disable-shared --prefix=/opt/apr-$APR_VERSION-static --host=aarch64-none-linux-gnu ac_cv_file__dev_zero=yes ac_cv_func_setpgrp_void=yes apr_cv_tcp_nodelay_with_cork=yes ac_cv_sizeof_struct_iovec=8 && \
  make || true && \
  pushd tools && \
  gcc -Wall -O2 -DCROSS_COMPILE gen_test_char.c -s -o gen_test_char && \
  popd && \
  make && make install && \
  popd

# Cross compile Apache Apr for aarch64 - share
RUN set -x && \
  wget https://downloads.apache.org//apr/apr-$APR_VERSION.tar.gz && \
  tar xvf apr-$APR_VERSION.tar.gz && \
  pushd apr-$APR_VERSION && \
  CC=aarch64-none-linux-gnu-gcc CFLAGS='-O3 -fno-omit-frame-pointer -fPIC' ./configure --prefix=/opt/apr-$APR_VERSION-share --host=aarch64-none-linux-gnu ac_cv_file__dev_zero=yes ac_cv_func_setpgrp_void=yes apr_cv_tcp_nodelay_with_cork=yes ac_cv_sizeof_struct_iovec=8 && \
  make || true && \
  pushd tools && \
  gcc -Wall -O2 -DCROSS_COMPILE gen_test_char.c -s -o gen_test_char && \
  popd && \
  make && make install && \
  popd

# Cross compile OpenSSL for aarch64 - share
RUN set -x && \
  wget https://github.com/openssl/openssl/archive/OpenSSL_$OPENSSL_VERSION.tar.gz && \
  tar xvf OpenSSL_$OPENSSL_VERSION.tar.gz && \
  pushd openssl-OpenSSL_$OPENSSL_VERSION && \
  ./Configure linux-aarch64 --cross-compile-prefix=aarch64-none-linux-gnu- --prefix=/opt/openssl-$OPENSSL_VERSION-share shared && \
  make && make install && \
  popd

WORKDIR /opt
RUN curl https://downloads.apache.org/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz | tar -xz
RUN echo 'PATH=/opt/apache-maven-3.6.3/bin/:$PATH' >> ~/.bashrc

# Prepare our own build
ENV PATH /opt/apache-maven-3.6.3/bin/:$PATH

RUN mkdir $WORKSPACE_DIR
RUN mkdir $PROJECT_DIR
WORKDIR $PROJECT_DIR

# Copy all the pom.xml files so we can download dependencies etc.
COPY ./boringssl-static/pom.xml $PROJECT_DIR/boringssl-static/pom.xml
COPY ./libressl-static/pom.xml $PROJECT_DIR/libressl-static/pom.xml
COPY ./openssl-dynamic/pom.xml $PROJECT_DIR/openssl-dynamic/pom.xml
COPY ./openssl-static/pom.xml $PROJECT_DIR/openssl-static/pom.xml
COPY ./pom.xml $PROJECT_DIR/pom.xml

# Pre-build boringssl
RUN /bin/bash -c 'source $HOME/.bashrc && mvn -Plinux-aarch64 -pl boringssl-static scm:checkout@get-boringssl antrun:run@build-boringssl -DboringsslSourceDir=$WORKSPACE_DIR/boringssl-source -DboringsslHome=$WORKSPACE_DIR/boringssl -DlinkStatic=true'
